
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: [], userId: 75 }
main.tsx:27:22
Status: 500, URL: /api/job-history/4 main.tsx:54:22
ðŸš¨ API ERROR: 500 - {"message":"Failed to update job history"} main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: saveJobMutation error 
Object { error: Error }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history/75 main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. main.tsx:27:24
ðŸ”¥ JOBHISTORYMANAGER: Add Experience button clicked main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}. main.tsx:40:23
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history/75 main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: handleSave called 
Object { formData: {â€¦}, editingJob: null }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: About to call saveJobMutation.mutate main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: saveJobMutation calling API 
Object { method: "POST", url: "/api/job-history", jobData: {â€¦} }
main.tsx:54:22
Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. main.tsx:27:24
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: API response received 
Object { status: 200 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: saveJobMutation success 
Object { data: {â€¦} }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) [â€¦], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history/75 main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (5) [â€¦], userId: 75 }
main.tsx:54:22
ðŸ”¥ JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (5) [â€¦], userId: 75 }
main.tsx:54:22

â€‹

