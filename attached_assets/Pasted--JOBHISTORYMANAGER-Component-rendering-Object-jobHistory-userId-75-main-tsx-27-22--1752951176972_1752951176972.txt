
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: [], userId: 75 }
main.tsx:27:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
Partitioned cookie or storage access was provided to “https://m.stripe.network/inner.html#url=https%3A%2F%2Fd3e3e06b-cd04-472a-8fec-78fcb4cf292d-00-2ubbs18tgduse.picard.replit.dev%2Ftalent-dashboard&title=&referrer=https%3A%2F%2Fd3e3e06b-cd04-472a-8fec-78fcb4cf292d-00-2ubbs18tgduse.picard.replit.dev%2Ftalent-dashboard&muid=e6a5e520-8073-4b57-b5d2-ebe883e8abd941a7b7&sid=22a4725f-28a0-47c4-a02f-4dfea69d524bf2b5e0&version=6&preview=false&__shared_params__[version]=basil” because it is loaded in the third-party context and dynamic state partitioning is enabled.
out-4.5.44.js:1:39660
Cookie warnings 3
🔥 JOBHISTORYMANAGER: Add Experience button clicked main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}. main.tsx:40:23
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history/75 main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: handleSave called 
Object { formData: {…}, editingJob: null }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: About to call saveJobMutation.mutate main.tsx:54:22
🔥 JOBHISTORYMANAGER: saveJobMutation calling API 
Object { method: "POST", url: "/api/job-history", jobData: {…} }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history main.tsx:54:22
🔥 JOBHISTORYMANAGER: API response received 
Object { status: 200 }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: saveJobMutation success 
Object { data: {…} }
main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
=== FRONTEND API RESPONSE === main.tsx:54:22
Status: 200, URL: /api/job-history/75 main.tsx:54:22
🔥 JOBHISTORYMANAGER: Component rendering 
Object { jobHistory: (4) […], userId: 75 }
main.tsx:54:22
Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. main.tsx:27:24
Status: 200, URL: /api/job-history/75 main.tsx:54:22

​

